1. 请问如何将下边这个列表的'小甲鱼'修改为'小鱿鱼'？
 list1 = [1, [1, 2, ['小甲鱼']], 3, 5, 8, 13, 18]



2. 要对一个列表进行顺序排序，请问使用什么方法？


3. 要对一个列表进行逆序排序，请问使用什么方法？


4. 列表还有两个内置方法没给大家介绍，不过聪明的你应该可以自己摸索使用的门道吧：copy() 和 clear()


5. 你有听说过列表推导式或列表解析吗？

没听过？！没关系，我们现场来学习一下吧，看表达式：
[ i*i for i in range(10) ]

你觉得会打印什么内容？
>>> [i*i for i in range(10)]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

居然分别打印了0到9各个数的平方，然后还放在列表里边了有木有？！

列表推导式（List comprehensions）也叫列表解析，灵感取自函数式编程语言 Haskell。Ta 是一个非常有用和灵活的工具，可以用来动态的创建列表，语法如：

[有关A的表达式 for A in B]

例如
>>> list1 = [x**2 for x in range(10)]
>>> list1
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

相当于
list1 = []
for x in range(10):
    list1.append(x**2)


问题：请先在 IDLE 中获得下边列表的结果，并按照上方例子把列表推导式还原出来。
>>> list1 = [(x, y) for x in range(10) for y in range(10) if x%2==0 if y%2!=0]



6. 活学活用：请使用列表推导式补充被小甲鱼不小心涂掉的部分





7. 请写下这一节课你学习到的内容：格式不限，回忆并复述是加强记忆的好方式！


回复您的答案即可查看参考答案！


测试题答案：

0. 注意，这道题跟上节课的那道题有点儿不同，回答完请上机实验或参考答案。
>>> old = [1, 2, 3, 4, 5]
>>> new = old
>>> old = [6]
>>> print(new)


会打印：[1, 2, 3, 4, 5]

如有不理解的朋友请看上一讲课后作业的详细答案。


1. 请问如何将下边这个列表的'小甲鱼'修改为'小鱿鱼'？
list1 = [1, [1, 2, ['小甲鱼']], 3, 5, 8, 13, 18]
list1[1][2][0] = '小鱿鱼'



2. 要对一个列表进行顺序排序，请问使用什么方法？
>>> 列表名.sort()



3. 要对一个列表进行逆序排序，请问使用什么方法？
>>> 列表名.sort()
>>> 列表名.reverse()
复制代码
或者
>>> 列表名.sort(reverse=True)



4. 列表还有两个内置方法没给大家介绍，不过聪明的你应该可以自己摸索使用的门道吧：copy() 和 clear()

copy() 方法跟使用切片拷贝是一样的：
>>> list2 = list1.copy()
>>> list2
[1, [1, 2, ['小甲鱼']], 3, 5, 8, 13, 18]


clear() 方法用于清空列表的元素，但要注意，清空完后列表仍然还在哦，只是变成一个空列表。
	>>> list2.clear()
	>>> list2
	[]


5. 问题：请先在 IDLE 中获得下边列表的结果，并按照上方例子把列表推导式还原出来。
>>> list1 = [(x, y) for x in range(10) for y in range(10) if x%2==0 if y%2!=0]

list1 = []
for x in ragne(10):
    for y in range(10):
        if x%2 == 0:
            if y%2 != 0:
                list1.append((x, y))



6. 活学活用：请使用列表推导式补充被小甲鱼不小心涂掉的部分

>>> list3 = [name + '：' + slogan[2:] for slogan in list1 for name in list2 if slogan[0] == name[0]]

