列表都可以存放一些什么东西？

1. 向列表增加元素有哪些方法？

2. append() 方法和 extend() 方法都是向列表的末尾增加元素，请问他们有什么区别？

3. member.append(['竹林小溪', 'Crazy迷恋']) 和 member.extend(['竹林小溪', 'Crazy迷恋']) 实现的效果一样吗？

4. 有列表 name = ['F', 'i', 'h', 'C']，如果小甲鱼想要在元素 'i' 和 'h' 之间插入元素 's'，应该使用什么方法来插入？


动动手：

0. 自己动手试试看，并分析在这种情况下，向列表添加数据应当采用哪种方法比较好？

假设给定以下列表：

member = ['小甲鱼', '黑夜', '迷途', '怡静', '秋舞斜阳']

要求将列表修改为：

member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]

方法一：使用 insert() 和 append() 方法修改列表。

方法二：重新创建一个同名字的列表覆盖。


1. 利用 for 循环打印上边 member 列表中的每个内容，如图：




2. 上一题打印的样式不是很好，能不能修改一下代码打印成下图的样式呢？【请至少使用两种方法实现】




3. 请写下这一节课你学习到的内容：格式不限，回忆并复述是加强记忆的好方式！


回复您的答案即可查看参考答案！


测试题答案：

0. 列表都可以存放一些什么东西？

我们说 Python 的列表是一个打了激素的数组，如果把数组比喻成集装箱，那么 Python 的列表就是一个大仓库，Ta 可以存放我们已经学习过的任何数据类型。

>>> mix = [1, ‘小甲鱼’, 3.14, [1, 2, 3]]


1. 向列表增加元素有哪些方法？

这节课我们教过大家三种方法想列表增加元素，分别是：append()、extend() 和 insert()。


2. append() 方法和 extend() 方法都是向列表的末尾增加元素，请问他们有什么区别？

append() 方法是将参数作为一个元素增加到列表的末尾。
extend() 方法则是将参数作为一个列表去扩展列表的末尾。

请看以下示例：
>>> name = ['F', 'i', 's', 'h']
>>> name.append('C')
>>> name
['F', 'i', 's', 'h', 'C']
>>> name.extend(['.', 'c'])
>>> name
['F', 'i', 's', 'h', 'C', '.', 'c']
>>> name.append(['o', 'm'])
>>> name
	['F', 'i', 's', 'h', 'C', '.', 'c', ['o', 'm']]



3. member.append(['竹林小溪', 'Crazy迷恋']) 和 member.extend(['竹林小溪', 'Crazy迷恋']) 实现的效果一样吗？

不一样，因为怕大家没有仔细看上一题的示例，所以不懂的请看上一题解释。


4. 有列表 name = ['F', 'i', 'h', 'C']，如果小甲鱼想要在元素 'i' 和 'h' 之间插入元素 's'，应该使用什么方法来插入？

name.insert(2, 's')




动动手答案：

0. 自己动手试试看，并分析在这种情况下，向列表添加数据应当采用哪种方法比较好？

假设给定以下列表：

member = ['小甲鱼', '黑夜', '迷途', '怡静', '秋舞斜阳']

要求将列表修改为：

member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]

方法一：使用 insert() 和 append() 方法修改列表。

方法二：重新创建一个同名字的列表覆盖。


解答：

方法一：
member.insert(1, 88)
member.insert(3, 90)
member.insert(5, 85)
member.insert(7, 90)
member.append(88)

方法二：
1.	member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]

对于这种情况，明显是第二种方法看起来要好一些嘛。

不过对于大型的列表，第一种方法可能更合适，所以我们说永远没有最好的，只有最合适的。



1. 利用 for 循环打印上边 member 列表中的每个内容
member = ['小甲鱼', 88, '黑夜', 90, '迷途', 85, '怡静', 90, '秋舞斜阳', 88]
for each in member:
    print(each)
复制代码


2. 上一题打印的样式不是很好，能不能修改一下代码打印成下图的样式呢？【请至少使用两种方法实现】
方法一：
count = 0
length = len(member)
while count < length:
    print(member[count], member[count+1])
    count += 2

方法二：

	for each in range(len(member)):
	    if each%2 == 0:
	        print(member[each], member[each+1])

0. 注意，这道题跟上节课的那道题有点儿不同，回答完请上机实验或参考答案。
>>> old = [1, 2, 3, 4, 5]
>>> new = old
>>> old = [6]
>>> print(new)

如果不上机操作，你觉得会打印什么内容？
